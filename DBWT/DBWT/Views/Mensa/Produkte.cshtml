@model IEnumerable<DBWT.Models.Gericht>
@using DBWT.Models
@{
    ViewBag.Title = "Produkte";
    Kategorie CurrentCatagory = new Kategorie();
    List<Kategorie> AlleKategorien = Service.GetKategorien();
    List<String> Überkategorien = Service.GetUpperKategorien(AlleKategorien);
    CurrentCatagory = Service.GetKategorieByID(ViewBag.categoryid);
}
<div class="row">
    <div class="col-3"></div>
    <div class="col-9">
        <h1>Verfügbare Speisen (@CurrentCatagory.Name)</h1>
    </div>
</div>
<div class="row mt-5">
    <div class="col-3">
        <form id="myFilter">
            <fieldset>
                <legend>Speiseliste filtern</legend>
                <select name="kat" class="form-control btn-outline-success">
                    <optgroup label="Generell">
                        <option value="0" selected>Alles Anzeigen</option>
                    </optgroup>
                    @foreach (var Upper in Überkategorien)
                    {
                        <optgroup label="@Upper">
                            @foreach (var cat in AlleKategorien)
                            {
                                if (cat.UpperCategoryName == Upper)
                                {
                                    if (cat.ID == CurrentCatagory.ID)
                                    {
                                        <option id="category-@cat.ID" value="@cat.ID" selected>@cat.Name</option>
                                    }
                                    else
                                    {
                                        <option id="category-@cat.ID" value="@cat.ID">@cat.Name</option>
                                    }
                                }

                            }
                        </optgroup>
                    }
                </select>
                <br />
                @CreateCheckbox("available", "nur verfügbare", ViewBag.available)
                @CreateCheckbox("vegetarian", "nur vegetarische", ViewBag.vegetarian)
                @CreateCheckbox("vegan", "nur vegane", ViewBag.vegan)
                <input class="btn btn-outline-success btn-center" type="submit" value="Speisen filtern"><br />
            </fieldset>
        </form>
    </div>
    <div class="col-7">
        <div class="row">
            @foreach (var G in Model)
            {
                <div class="col-3">
                    @Base64Image((byte[])G.Bilddaten, G.Bildtitel, G.Verfuegbar)
                    <p class="mb-0">@G.Name</p>

                    @if (G.Verfuegbar)
                    {
                        @*<a href="Detail.cshtml?id=@G.ID" class="mb-1">Details</a>*@
                        @Html.ActionLink("Details", "Detail/" + G.ID, "Mensa")
                    }
                    else
                    {
                        <p>Vergriffen</p>
                    }
                </div>
            }
        </div>
    </div>
    <div class="col-2">
    </div>
</div>
@*<================= HELPER ======================>*@
@helper CreateCheckbox(string name, string label, bool b)
{
    if (b)
    {
        <input type="checkbox" name="@name" value="true" checked><label class="choice ml-1">@label</label><br />
    }
    else
    {
        <input type="checkbox" name="@name" value="true"><label class="choice ml-1">@label</label><br />
    }
}

@helper Base64Image(byte[] bindata, string alt, bool available)
{
    if (bindata != null && bindata.Length > 0)
    {
        string Base64Prefix = "data:image/jpeg;base64,";
        string image = Base64Prefix + System.Convert.ToBase64String(bindata);

        // Diese Base64-codierte Repräsentation der Bilddatei wird dem Browser direkt übergeben
        if (available)
        {
            <img class="square" alt="@alt" src="@image" />
        }
        else
        {
            <img class="square unavailable" alt="@alt" src="@image" />
        }

    }
    else
    {
        <p class="error">Es kann kein Bild gezeigt werden </p>
    }
}